#!/usr/bin/env python2

import time
import stat

import blkdev
import luksdev

import fuse

ST_RDONLY = 1

class LUKSFS(fuse.Operations):

	def __init__(self, root):
		now = time.time()
		self.dev = luksdev.LUKSDevice(blkdev.BlockDevice(root))
		if not self.dev.findKeyForPassphrase(pwd):
			print "No available key with this passphrase"
			sys.exit(2)
		self.image = {"st_mode": stat.S_IFREG | 0444,
		              "st_ctime": now,
					  "st_mtime": now,
					  "st_atime": now,
					  "st_nlink": 1,
					  "st_size": self.dev.block_size * self.dev.block_count,
					  "st_blocks": self.dev.block_count,
					  "st_blksize": self.dev.block_size}

	def statfs(self, path):
		return {"f_namemax": 1024,
				"f_blocks": self.dev.block_count,
				"f_bavail": 0,
				"f_frsize": self.dev.block_size,
				"f_bsize": self.dev.block_size,
				"f_flag": ST_RDONLY}

	def readdir(self, path, fh):
		return [".", "..", "decrypted.img"]

	def getattr(self, path, fh=None):
		if path == "/decrypted.img":
			return self.image
		return fuse.Operations.getattr(self, path, fh)

	def read(self, path, size, offset, fh):
		if path == "/decrypted.img":
			return self.dev.read(offset, size)
		return fuse.Operations.read(self, path, size, offset, fh)


def mount(root, mountpoint, pwd):
	fuse.FUSE(LUKSFS(root), mountpoint, nothreads=True, foreground=True)
	

if __name__ == "__main__":
	import sys, getpass
	if len(sys.argv) != 3:
		print >> sys.stderr, "Usage: %s <root> <mountpoint>" % sys.argv[0]
		sys.exit(1)
	pwd = getpass.getpass("Enter password: ")
	mount(sys.argv[1], sys.argv[2], pwd)

